#### Deploying All Networks and Application will be execute through this workflow file on Prod Environment ####
name: 'Production Deployment'
on: 
  workflow_dispatch:
 
jobs: 
  setup-SSH: 
    defaults: 
      run: 
        shell: bash
    name: SetUp-SSH&Terragrunt
    runs-on: self-hosted
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: "Setup Terragrunt v0.38.4"
        run: |
            sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.38.4/terragrunt_linux_amd64"
            sudo chmod +x /bin/terragrunt
            terragrunt -v
      - 
        name: "Setup SSH"
        uses: MrSquaare/ssh-setup-action@v1
        with: 
          host: github.com
          private-key: "${{ secrets.PRIVATE_KEY }}"

#######################################################
#Deploy Dev VPC with Subnet, RouteTable, IGW nad Nat
#######################################################

  deploy-vpc: 
    defaults: 
      run: 
        shell: bash
    name: Deploy-PROD-VPC
    environment:
      name: Prod
    runs-on: self-hosted
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Terragrunt Apply Network
        run: terragrunt init --terragrunt-working-dir ./production/network && terragrunt apply -auto-approve --terragrunt-working-dir ./production/network
        env:
          TERRAFORM_TOKEN: ${{ secrets.TERRAFORM_TOKEN }}
    needs: [setup-SSH]

#######################################################
#Deploy Static-WebApp with Clasic LB
#######################################################

  deploy-webapp: 
    defaults: 
      run: 
        shell: bash
    name: Deploy-PROD-WebApp
    environment:
      name: Prod
    runs-on: self-hosted
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Terragrunt Apply WebApp
        run: terragrunt init --terragrunt-working-dir ./production/static-web-app && terragrunt apply -auto-approve --terragrunt-working-dir ./production/static-web-app
        env:
          TERRAFORM_TOKEN: ${{ secrets.TERRAFORM_TOKEN }}
    needs: [deploy-vpc]

############################################################################
#Deploy Static-WebApp with Application Load Balancer and Autoscalling groups
############################################################################

  # deploy-webapp-alb: 
  #   defaults: 
  #     run: 
  #       shell: bash
  #   name: Deploy-PROD-WebApp-ALB
  #   environment:
  #     name: Prod
  #   runs-on: self-hosted
  #   steps: 
  #     - 
  #       name: Checkout
  #       uses: actions/checkout@v2
  #     - 
  #       name: Terragrunt Apply WebApp-alb

  #       run: terragrunt init --terragrunt-working-dir ./production/static-web-app-alb && terragrunt apply -auto-approve --terragrunt-working-dir ./production/static-web-app-alb
  #       env:
  #         TERRAFORM_TOKEN: ${{ secrets.TERRAFORM_TOKEN }}
  #   needs: [deploy-vpc]

#######################################################################
#Deploy Static-WebApp with , ECS Fargate with Application Load Balancer
#######################################################################

  # deploy-nexon-marketing: 
  #   defaults: 
  #     run: 
  #       shell: bash
  #   name: Deploy-PROD-Nexon-Marketing
  #   environment:
  #     name: Prod
  #   runs-on: self-hosted
  #   steps: 
  #     - 
  #       name: Checkout
  #       uses: actions/checkout@v2
  #     - 
  #       name: Terragrunt Apply WebApp-alb

  #       run: terragrunt init --terragrunt-working-dir ./production/nexon-marketing-app && terragrunt apply -auto-approve --terragrunt-working-dir ./production/nexon-marketing-app
  #       env:
  #         TERRAFORM_TOKEN: ${{ secrets.TERRAFORM_TOKEN }}
  #   needs: [deploy-vpc]
